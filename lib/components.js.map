{"version":3,"sources":["../src/components.js"],"names":["MediaQueryWrapper","props","dispatch","fakeWidth","children","other","values","deviceWidth","width","isComponentAllowed","propTypes","PropTypes","oneOfType","node","func","component","string","symbol","isRequired","number","defaultProps","undefined","responsiveWrapper","state","responsive","XsScreen","maxWidth","breakPoints","sm","SmScreen","query","md","MdScreen","lg","LgScreen","XsScreenHidden","minWidth","SmScreenHidden","MdScreenHidden","LgScreenHidden","DesktopScreen","MobileScreen"],"mappings":"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","sourcesContent":["/* eslint-disable object-curly-newline */\n/* eslint-disable implicit-arrow-linebreak */\n/* eslint-disable no-unused-vars */\n/* eslint-disable unicorn/no-null */\n/* eslint-disable semi */\n/* eslint-disable quotes */\n// see also components/ScreenSize for another way to consume this data\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useMediaQuery } from \"react-responsive\";\nimport { connect } from \"react-redux\";\nimport { breakPoints } from \"./defaults\";\n\n// eslint-disable-next-line react/function-component-definition\nexport const MediaQueryWrapper = (props = {}) => {\n  // eslint-disable-next-line no-unused-vars\n  const { dispatch, fakeWidth, children, ...other } = props;\n  const values = { deviceWidth: fakeWidth, width: fakeWidth };\n  const isComponentAllowed = useMediaQuery(other, values);\n  if (isComponentAllowed) {\n    return children;\n  }\n  return null;\n};\n\nMediaQueryWrapper.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.node, PropTypes.func]),\n  component: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.symbol,\n  ]),\n  dispatch: PropTypes.func.isRequired,\n  fakeWidth: PropTypes.number.isRequired,\n};\n\nMediaQueryWrapper.defaultProps = {\n  children: undefined,\n  component: \"div\",\n};\n\nexport const responsiveWrapper = (props = {}) =>\n  connect((state) => ({\n    fakeWidth: state.responsive.fakeWidth,\n    ...props,\n  }))(MediaQueryWrapper);\n\nexport const XsScreen = responsiveWrapper({ maxWidth: breakPoints.sm - 1 });\nexport const SmScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.sm}px) and (max-width: ${\n    breakPoints.md - 1\n  }px)`,\n});\nexport const MdScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.md}px) and (max-width: ${\n    breakPoints.lg - 1\n  }px)`,\n});\nexport const LgScreen = responsiveWrapper({\n  query: `(min-width: ${breakPoints.lg}px)`,\n});\n\nexport const XsScreenHidden = responsiveWrapper({ minWidth: breakPoints.sm });\nexport const SmScreenHidden = responsiveWrapper({\n  query: `(max-width: ${breakPoints.sm - 1}px), (min-width: ${\n    breakPoints.md\n  }px)`,\n});\nexport const MdScreenHidden = responsiveWrapper({\n  query: `(max-width: ${breakPoints.md - 1}px), (min-width: ${\n    breakPoints.lg\n  }px)`,\n});\nexport const LgScreenHidden = responsiveWrapper({\n  maxWidth: breakPoints.lg - 1,\n});\n\nexport { XsScreen as PhoneScreen };\nexport { SmScreen as TabletScreen };\nexport const DesktopScreen = responsiveWrapper({ minWidth: breakPoints.md });\nexport const MobileScreen = responsiveWrapper({ maxWidth: breakPoints.md - 1 });\n\nexport { XsScreenHidden as PhoneScreenHidden };\nexport { SmScreenHidden as TabletScreenHidden };\nexport { MobileScreen as DesktopScreenHidden };\nexport { DesktopScreen as MobileScreenHidden };\n"],"file":"components.js"}