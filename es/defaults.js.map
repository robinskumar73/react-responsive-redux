{"version":3,"sources":["../src/defaults.js"],"names":["breakPoints","xs","sm","md","lg","defaultSizes","phone","tablet","desktop"],"mappings":"AAGA,OAAO,IAAMA,WAAW,GAAG;AACzBC,EAAAA,EAAE,EAAE,GADqB;AAEzBC,EAAAA,EAAE,EAAE,GAFqB;AAGzBC,EAAAA,EAAE,EAAE,GAHqB;AAIzBC,EAAAA,EAAE,EAAE;AAJqB,CAApB;AAOP,OAAO,IAAMC,YAAY,GAAG;AAI1BC,EAAAA,KAAK,EAAEN,WAAW,CAACE,EAAZ,GAAiB,CAJE;AAS1BK,EAAAA,MAAM,EAAEP,WAAW,CAACG,EAAZ,GAAiB,CATC;AAY1BK,EAAAA,OAAO,EAAER,WAAW,CAACI;AAZK,CAArB","sourcesContent":["// based on bootstrap and  http://www.websitedimensions.com/\n// these are the maximum values for the device type so <= phone is a phone,\n// > phone && <= tablet is a tablet, and > tablet is a desktop\nexport const breakPoints = {\n  xs: 480,\n  sm: 768,\n  md: 992,\n  lg: 1200,\n}\n\nexport const defaultSizes = {\n  // the phone value covers portrait and landscape - there's no way to tell the\n  // difference from the request unless we have client hints (which don't work\n  // on the first request anyway) or something similar\n  phone: breakPoints.sm - 1,\n  // this is tricky too - we're going by what bootstrap uses as a default but\n  // an ipad in portrait mode will match here even though the width might be\n  // 1024, 1112, or 1366. for now leave as is - in the future we could handle\n  // this by compiling a list of resolutions but that's a huge undertaking.\n  tablet: breakPoints.md - 1,\n  // this comes from bootstrap lg which we use this as our default desktop size\n  // (even though technically > 991 is desktop most seem to fall here).\n  desktop: breakPoints.lg,\n}\n"],"file":"defaults.js"}